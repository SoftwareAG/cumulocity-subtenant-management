name: Release
on:
  push:
    branches:
      - main
      - next
      - beta
      - '*.x'
      - '*.*.x'

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 8
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # - name: Linting
      #   run: npm run lint

      - name: Build
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          if-no-files-found: error
          retention-days: 5
          path: |
            dist/sag-pkg-subtenant-management.zip

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build]
    timeout-minutes: 8
    outputs:
      initial-version: ${{ steps.save-initial-version.outputs.version }}
      version: ${{ steps.save-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Save initial Version
        id: save-initial-version
        run: echo "version=$(cat package.json | jq '.version' | xargs)" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: npm ci

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Save Version
        id: save-version
        run: echo "version=$(cat package.json | jq '.version' | xargs)" >> $GITHUB_OUTPUT

  release-assets:
    needs: [release]
    if: ${{ needs.release.outputs.initial-version != needs.release.outputs.version }}
    name: Release assets
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: v${{ needs.release.outputs.version }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Copy build artifact
        run: |
          cp dist/sag-pkg-subtenant-management.zip subtenant-management-${{ needs.release.outputs.version }}.zip

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: subtenant-management-${{ needs.release.outputs.version }}.zip
          tag_name: v${{ needs.release.outputs.version }}
